schema {
  query: Query
  mutation: Mutation
}

type Query {
  books: [Book!]!
  book(id: ID!): Book
}

type Mutation {
  createBook(input: BookInput!): Book!
  updateBook(id: ID!, input: BookInput!): Book!
  deleteBook(id: ID!): DeleteBookResponse!
  register(input: UserInput!): User!
  login(username: String!, password: String!): AuthResponse!
}

type Book {
  id: ID!
  titulo: String!
  autor: String!
  editorial: String!
  anio: Int!
  descripcion: String!
  numero_pagina: Int!
}

input BookInput {
  titulo: String!
  autor: String!
  editorial: String!
  anio: Int!
  descripcion: String!
  numero_pagina: Int!
}

type DeleteBookResponse {
  success: Boolean!
  message: String!
}

type User {
  id: ID!
  username: String!
  role: String!
}

input UserInput {
  username: String!
  password: String!
  role: String!
}

type AuthResponse {
  token: String!
  user: User!
}